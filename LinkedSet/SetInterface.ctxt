#BlueJ class context
comment0.params=newEntry
comment0.target=boolean\ add(java.lang.Object)
comment0.text=\r\n\ Adds\ a\ new\ entry\ to\ this\ set,\ avoiding\ duplicates.\ Increases\ the\ number\r\n\ of\ entries\ by\ 1.\r\n\ \r\n\ @param\ newEntry\r\n\ \ \ \ \ \ \ \ \ \ \ \ the\ object\ to\ be\ added\ as\ a\ new\ entry\r\n\ @return\ true\ if\ the\ addition\ is\ successful,\ or\ false\ if\ the\ item\ already\r\n\ \ \ \ \ \ \ \ \ is\ in\ the\ set\r\n
comment1.params=anEntry
comment1.target=boolean\ remove(java.lang.Object)
comment1.text=\r\n\ Removes\ a\ specific\ entry\ from\ this\ set.\ Decreases\ the\ number\ of\ entries\r\n\ by\ 1.\r\n\ \r\n\ @param\ anEntry\ the\ object\ to\ be\ removed\r\n\ @return\ true\ if\ the\ removal\ was\ successful,\ or\ false\ if\ not\r\n
comment10.params=anotherSet
comment10.target=SetInterface\ intersection(SetInterface)
comment10.text=\ \r\n\ form\ the\ intersection\ of\ the\ current\ set\ with\ a\ second\ set.\r\n\ \r\n\ @param\ anotherSet\ the\ set\ to\ intersect\ with\ the\ current\ set\ \r\n\ @return\ intersection\ of\ the\ two\ sets\r\n
comment11.params=anotherSet
comment11.target=SetInterface\ difference(SetInterface)
comment11.text=\ \r\n\ Perform\ a\ set\ difference.\r\n\ \r\n\ @param\ anotherSet\ the\ set\ to\ be\ subtracted\ from\ the\ current\ set\ \r\n\ @return\ current\ set\ minus\ anotherSet\r\n
comment2.params=
comment2.target=java.lang.Object\ remove()
comment2.text=\r\n\ Removes\ an\ unspecified\ entry\ from\ this\ set.\ Decreases\ the\ number\ of\r\n\ entries\ by\ 1.\r\n\ \r\n\ @return\ either\ the\ entry\ if\ the\ removal\ was\ successful,\ or\ null\r\n
comment3.params=
comment3.target=void\ clear()
comment3.text=Removes\ all\ entries\ from\ this\ set.
comment4.params=anEntry
comment4.target=boolean\ contains(java.lang.Object)
comment4.text=\r\n\ Tests\ whether\ this\ set\ contains\ a\ given\ entry.\r\n\ \r\n\ @param\ anEntry\ the\ object\ that\ is\ the\ desired\ entry\r\n\ @return\ true\ if\ the\ set\ contains\ anEntry,\ or\ false\ if\ not\r\n
comment5.params=
comment5.target=int\ getCurrentSize()
comment5.text=\r\n\ Gets\ the\ size\ of\ this\ set.\r\n\ \r\n\ @return\ the\ integer\ number\ of\ entries\ currently\ in\ the\ set\r\n
comment6.params=
comment6.target=boolean\ isEmpty()
comment6.text=\r\n\ Sees\ whether\ this\ set\ is\ empty.\r\n\ \r\n\ @return\ true\ if\ the\ set\ is\ empty,\ or\ false\ if\ not\r\n
comment7.params=
comment7.target=boolean\ isFull()
comment7.text=\r\n\ Sees\ whether\ this\ set\ is\ full.\r\n\ \r\n\ @return\ true\ if\ the\ set\ is\ full,\ or\ false\ if\ not\r\n
comment8.params=
comment8.target=java.lang.Object[]\ toArray()
comment8.text=\r\n\ Retrieves\ all\ entries\ that\ are\ in\ this\ set.\r\n\ \r\n\ @return\ a\ newly\ allocated\ array\ of\ all\ the\ entries\ in\ the\ set\r\n
comment9.params=anotherSet
comment9.target=SetInterface\ union(SetInterface)
comment9.text=\ \r\n\ merge\ the\ current\ set\ with\ a\ second\ set.\r\n\ \r\n\ @param\ anotherSet\ the\ set\ to\ be\ merged\ with\ the\ current\ set\ \r\n\ @return\ union\ of\ the\ two\ sets\r\n
numComments=12
